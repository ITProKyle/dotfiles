#!/usr/bin/env zsh
# shellcheck shell=bash
# ==============================================================================
export PATH="/usr/local/bin:/usr/local/sbin:$HOME/bin:$HOME/.local/bin:$PATH"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh";
export ZSH_CUSTOM="${HOME}/.oh-my-zsh/custom";

autoload -U +X bashcompinit && bashcompinit;

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# shellcheck disable=SC2034
ZSH_THEME="agnoster";

zstyle ':omz:update' mode reminder;  # remind me to update when it's time
zstyle ':omz:update' frequency 13;

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Add wisely, as too many plugins slow down shell startup.
# Those without explicit comments can be found here: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins
# shellcheck disable=SC2034
plugins=(
  # this needs to go first to load env vars and such
  zshrc.d  # https://github.com/mattmc3/zshrc.d
  asdf
  autoupdate  # https://github.com/TamCore/autoupdate-oh-my-zsh-plugins
  evalcache  # https://github.com/mroth/evalcache
  brew
  colorize
  dotenv
  git-open  # https://github.com/paulirish/git-open
  gitignore
  # TODO (kyle): ensure this has no negative performance impact
  gnu-utils  # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/gnu-utils
  history
  macos
  nmap
  npm
  poetry
  zsh-autosuggestions  # https://github.com/zsh-users/zsh-autosuggestions
)

# shellcheck disable=SC1091
source "${ZSH}/oh-my-zsh.sh";
# shellcheck disable=SC1091
source "${HOMEBREW_PREFIX}/opt/git-extras/share/git-extras/git-extras-completion.zsh" >/dev/null 2>&1 || true;

_evalcache direnv hook zsh;

# make tab completion customizations
zstyle ':completion:*' group-name '';
zstyle ':completion:*' menu select;
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f';
zstyle ':completion:*:*:*:*:descriptions' format '%F{green}-- %d --%f';
zstyle ':completion:*:*:-command-:*:*' group-order alias builtins functions commands;
# shellcheck disable=SC2086,SC2296
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS};
zstyle ':completion:*:make:*' tag-order targets;
zstyle ':completion:*:make:*:targets' call-command true;  # outputs all possible results for make targets
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f';
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f';

# Preferred editor for local and remote sessions
if [[ -z $SSH_CONNECTION ]]; then
  export EDITOR='code';
  export VISUAL='code';
else
  export EDITOR='nano';
fi

alias config='${EDITOR} ~/.config';
alias ffs='sudo !!';  # append "sudo" to the last command
alias hosts='sudo ${EDITOR} /etc/hosts';
alias npmrc='${EDITOR} ~/.npmrc';
alias repo='cd ~/repos/ && ls';
alias zshrc='${EDITOR} ~/.zshrc';

if [[ "${EDITOR}" == "code" ]]; then
  export WALK_EDITOR="${EDITOR} --wait";
else
  export WALK_EDITOR="${EDITOR}";
fi
unalias ll;  # this is aliased by ohmyzsh

function ll {
  # https://github.com/antonmedv/walk
  cd "$(walk --icons "$@")" || return;
}

function lk {
  # https://github.com/antonmedv/walk
  cd "$(walk --icons "$@")" || return;
}

# https://github.com/direnv/direnv/wiki/Python#zsh
setopt PROMPT_SUBST;
function show_virtual_env {
  if [[ -n "${VIRTUAL_ENV}" && -n "${DIRENV_DIR}" ]]; then
    echo "($(basename "${VIRTUAL_ENV}"))";
  fi
}
PS1='$(show_virtual_env)'$PS1;

# https://github.com/zsh-users/zsh-syntax-highlighting
if [[ -n "${HOMEBREW_PREFIX}" ]]; then
  # shellcheck disable=SC1091
  source "${HOMEBREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" || true;
else
  # path for most Linux distributions (except perhaps NixOS)
  # shellcheck disable=SC1091
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh || true;
fi

if ! command -v atuin; then
  PATH="${PATH}:${HOME}/.atuin/bin";
fi
# https://docs.atuin.sh/guide/installation/
eval "$(atuin init zsh)" || echo "atuin not installed. install it to sync history.";

# shellcheck disable=SC1091
source "${HOME}/.docker/init-zsh.sh" || true; # Added by Docker Desktop

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh;
