#! /usr/bin/env oi
# shellcheck shell=bash

# shellcheck disable=SC2296
SCRIPT_PATH="${(%):-%x}";  # special zsh syntax
SCRIPT_NAME=$(basename "$SCRIPT_PATH")

EXIT_CODE=0;
ERRORS=();

__QUIET_SCRIPT="false";

function __help {
  cat << HEREDOC

  Install pipx.

  Usage: ${SCRIPT_NAME} [OPTIONS]

  Arguments:
      -h, --help           show this help message and exit
      -q, --quiet          suppress some output

HEREDOC
}

function __pipx_install {
  local python_path;

  if [[ -z "$(command -v pipx)" ]]; then
    oi::log.notice "pipx not found! installing it now...";
    python_path="$(command -v python3)";
    "${python_path}" -m pip install --user pipx;
    "${python_path}" -m pipx ensurepath;
    oi::log.success "pipx has been successfully installed!";

    if [[ -z "$(command -v pipx)" ]]; then
      oi::log.fatal "pipx is still not available in PATH after install";
      oi::log.fatal "additional steps are required";
      oi::exit.error;
    fi

  else
    if [[ "${__QUIET_SCRIPT}" != "true" ]]; then
      oi::log.info "pipx is already installed";
      oi::exit.ok "nothing to do";
    fi
  fi
}

while [[ "${1:-}" != "" ]]; do
  case $1 in
    --help | -h)
      __help; oi::exit.ok "nothing to do";
      ;;
    --quiet | -q)
      __QUIET_SCRIPT="true";
      shift;
      ;;
    *)
      ERRORS+=("Unrecognized argument: $1");
      EXIT_CODE=1;
      shift;
      ;;
  esac
done

if [[ ${EXIT_CODE} -gt 0 ]]; then
  oi::log.fatal "${SCRIPT_NAME}: Fatal error(s) detected exiting...";
  for error_text in "${ERRORS[@]}"; do
    oi::log.fatal "   ${error_text}";
  done
  oi::exit.error;
fi

__pipx_install;
